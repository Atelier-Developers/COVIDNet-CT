version: "3.8"
services:
  aphrodite:
    build:
      context: .
    restart: on-failure
    networks:
      - monitoring
      - database
    ports:
    - "8090:8090"
    tty: true
  alert_manager:
    image: prom/alertmanager:v0.23.0
    network_mode: host
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./rules:/etc/prometheus/rules
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - monitoring
    ports:
      - "9090:9090"
    extra_hosts:
      - "host.docker.internal:host-gateway"
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - monitoring
    ports:
      - "9100:9100"
  grafana:
    image: grafana/grafana:latest
    user: "0"
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    networks:
      - monitoring
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./grafana-storage:/var/lib/grafana
  db:
    image: mysql:8.0.27
    cap_add:
      - SYS_NICE # CAP_SYS_NICE
    volumes:
      - db_data:/var/lib/mysql
      - ./database_feedbacks/init_schema.sql:/docker-entrypoint-initdb.d/init_schema.sql:ro
    networks:
      - monitoring
    ports:
      - "3306:3306"
    restart: always
    environment:
      MYSQL_DATABASE: aphrodite_feedbacks
      MYSQL_ROOT_HOST: "%"
      MYSQL_ROOT_PASSWORD:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_USER: aphrodite
      MYSQL_PASSWORD: goddessOfLove

networks:
  monitoring:
    driver: bridge
  database:

volumes:
  prometheus_data: {}
  db_data:
